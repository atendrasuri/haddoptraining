package com.mapr.examples;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Properties;

import org.apache.kafka.clients.consumer.ConsumerRecord;
import org.apache.kafka.clients.consumer.ConsumerRecords;
import org.apache.kafka.clients.consumer.KafkaConsumer;

public class SimpleConsumer {
   public static void main(String[] args) throws Exception {
      if(args.length == 0){
         System.out.println("Enter topic name");
         return;
      }
      //Kafka consumer configuration settings
      String topicName = "sales";
      Properties props = new Properties();
      
      props.put("bootstrap.servers", "sandbox.hortonworks.com:6667");
      props.put("group.id", "test");
      props.put("enable.auto.commit", "true");
      props.put("auto.commit.interval.ms", "1000");
      props.put("session.timeout.ms", "30000");
      props.put("key.deserializer", 
         "org.apache.kafka.common.serialization.StringDeserializer");
      props.put("value.deserializer", 
         "org.apache.kafka.common.serialization.StringDeserializer");
      KafkaConsumer<String, String> consumer = new KafkaConsumer
         <String, String>(props);
      
      //Kafka Consumer subscribes list of topics here.
      consumer.subscribe(Arrays.asList(topicName));
      
      //print the topic name
      System.out.println("Subscribed to topic " + topicName);
      int i = 0;
      List<String> list = new ArrayList<String>();
      while (true) {
         ConsumerRecords<String, String> records = consumer.poll(100);
          int count=0;
       for (ConsumerRecord<String, String> consumerRecord : records) {
		  String[] arr =  consumerRecord.value().split(" ");
		  if(arr[0].startsWith("Please"))
		  {
			  break;
		  }
		  list.addAll(Arrays.asList(arr));
		      }
        
       Map<String, Integer>map= new HashMap<String, Integer>();
       
       for(String s: list){
    	   if(map.get(s)==null)
    	   {
    		   map.put(s, 1);
    	   }
    	   else
    	   {
    		   map.put(s,map.get(s)+1);
    	   }
       }
          
      }
   }
}